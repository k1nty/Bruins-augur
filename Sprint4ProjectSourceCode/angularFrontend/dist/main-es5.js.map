{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_components/alert.component.ts","webpack:///src/app/_components/alert.component.html","webpack:///src/app/_components/index.ts","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_models/alert.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/index.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","message","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","classes","alertTypeClass","Success","Info","Warning","type","join","selector","templateUrl","AuthGuard","accountService","route","state","user","userValue","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","statusText","console","usersKey","users","JSON","parse","localStorage","getItem","FakeBackendInterceptor","method","headers","body","handleRoute","endsWith","authenticate","register","getUsers","match","getUserById","updateUser","deleteUser","username","password","find","ok","basicDetails","token","length","Math","max","map","setItem","stringify","isLoggedIn","unauthorized","idFromUrl","params","Object","assign","firstName","lastName","get","urlParts","split","parseInt","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","Alert","init","AlertType","User","AccountService","http","userSubject","asObservable","post","removeItem","put","value","AlertService","subject","defaultId","options","accountModule","AccountModule","usersModule","UsersModule","routes","path","component","canActivate","loadChildren","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","AppModule","declarations","providers","bootstrap","HomeComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Alert, AlertType } from '@app/_models';\nimport { AlertService } from '@app/_services';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    @Input() id = 'default-alert';\n    @Input() fade = true;\n\n    alerts: Alert[] = [];\n    alertSubscription: Subscription;\n    routeSubscription: Subscription;\n\n    constructor(private router: Router, private alertService: AlertService) { }\n\n    ngOnInit() {\n        // subscribe to new alert notifications\n        this.alertSubscription = this.alertService.onAlert(this.id)\n            .subscribe(alert => {\n                // clear alerts when an empty alert is received\n                if (!alert.message) {\n                    // filter out alerts without 'keepAfterRouteChange' flag\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n                    // remove 'keepAfterRouteChange' flag on the rest\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\n                    return;\n                }\n\n                // add alert to array\n                this.alerts.push(alert);\n\n                // auto close alert if required\n                if (alert.autoClose) {\n                    setTimeout(() => this.removeAlert(alert), 3000);\n                }\n           });\n\n        // clear alerts on location change\n        this.routeSubscription = this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.alertService.clear(this.id);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.alertSubscription.unsubscribe();\n        this.routeSubscription.unsubscribe();\n    }\n\n    removeAlert(alert: Alert) {\n        // check if already removed to prevent error on auto close\n        if (!this.alerts.includes(alert)) return;\n\n        if (this.fade) {\n            // fade out alert\n            alert.fade = true;\n\n            // remove alert after faded out\n            setTimeout(() => {\n                this.alerts = this.alerts.filter(x => x !== alert);\n            }, 250);\n        } else {\n            // remove alert\n            this.alerts = this.alerts.filter(x => x !== alert);\n        }\n    }\n\n    cssClass(alert: Alert) {\n        if (!alert) return;\n\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n                \n        const alertTypeClass = {\n            [AlertType.Success]: 'alert alert-success',\n            [AlertType.Error]: 'alert alert-danger',\n            [AlertType.Info]: 'alert alert-info',\n            [AlertType.Warning]: 'alert alert-warning'\n        }\n\n        classes.push(alertTypeClass[alert.type]);\n\n        if (alert.fade) {\n            classes.push('fade');\n        }\n\n        return classes.join(' ');\n    }\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n    <span [innerHTML]=\"alert.message\"></span>\n</div>","export * from './alert.component';\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.accountService.userValue;\n        if (user) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].includes(err.status) && this.accountService.userValue) {\n                // auto logout if 401 or 403 response returned from api\n                this.accountService.logout();\n            }\n\n            const error = err.error?.message || err.statusText;\n            console.error(err);\n            return throwError(error);\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, materialize, dematerialize } from 'rxjs/operators';\n\n// array in local storage for registered users\nconst usersKey = 'angular-10-registration-login-example-users';\nlet users = JSON.parse(localStorage.getItem(usersKey)) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        return handleRoute();\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users/register') && method === 'POST':\n                    return register();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\n                    return getUserById();\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\n                    return updateUser();\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                    return deleteUser();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }    \n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) return error('Username or password is incorrect');\n            return ok({\n                ...basicDetails(user),\n                token: 'fake-jwt-token'\n            })\n        }\n\n        function register() {\n            const user = body\n\n            if (users.find(x => x.username === user.username)) {\n                return error('Username \"' + user.username + '\" is already taken')\n            }\n\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n            users.push(user);\n            localStorage.setItem(usersKey, JSON.stringify(users));\n            return ok();\n        }\n\n        function getUsers() {\n            if (!isLoggedIn()) return unauthorized();\n            return ok(users.map(x => basicDetails(x)));\n        }\n\n        function getUserById() {\n            if (!isLoggedIn()) return unauthorized();\n\n            const user = users.find(x => x.id === idFromUrl());\n            return ok(basicDetails(user));\n        }\n\n        function updateUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            let params = body;\n            let user = users.find(x => x.id === idFromUrl());\n\n            // only update password if entered\n            if (!params.password) {\n                delete params.password;\n            }\n\n            // update and save user\n            Object.assign(user, params);\n            localStorage.setItem(usersKey, JSON.stringify(users));\n\n            return ok();\n        }\n\n        function deleteUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            users = users.filter(x => x.id !== idFromUrl());\n            localStorage.setItem(usersKey, JSON.stringify(users));\n            return ok();\n        }\n\n        // helper functions\n\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }))\n                .pipe(delay(500)); // delay observable to simulate server api call\n        }\n\n        function error(message) {\n            return throwError({ error: { message } })\n                .pipe(materialize(), delay(500), dematerialize()); // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648);\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorized' } })\n                .pipe(materialize(), delay(500), dematerialize());\n        }\n\n        function basicDetails(user) {\n            const { id, username, firstName, lastName } = user;\n            return { id, username, firstName, lastName };\n        }\n\n        function isLoggedIn() {\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        }\n\n        function idFromUrl() {\n            const urlParts = url.split('/');\n            return parseInt(urlParts[urlParts.length - 1]);\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';\nexport * from './fake-backend';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { AccountService } from '@app/_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add auth header with jwt if user is logged in and request is to the api url\n        const user = this.accountService.userValue;\n        const isLoggedIn = user && user.token;\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${user.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","export class Alert {\n    id: string;\n    type: AlertType;\n    message: string;\n    autoClose: boolean;\n    keepAfterRouteChange: boolean;\n    fade: boolean;\n\n    constructor(init?:Partial<Alert>) {\n        Object.assign(this, init);\n    }\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}","export * from './alert';\nexport * from './user';","export class User {\n    id: string;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    token: string;\n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    login(username, password) {\n        return this.http.post<User>(`${environment.apiUrl}/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n                this.userSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    register(user: User) {\n        return this.http.post(`${environment.apiUrl}/users/register`, user);\n    }\n\n    getAll() {\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\n    }\n\n    getById(id: string) {\n        return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\n    }\n\n    update(id, params) {\n        return this.http.put(`${environment.apiUrl}/users/${id}`, params)\n            .pipe(map(x => {\n                // update stored user if the logged in user updated their own record\n                if (id == this.userValue.id) {\n                    // update local storage\n                    const user = { ...this.userValue, ...params };\n                    localStorage.setItem('user', JSON.stringify(user));\n\n                    // publish updated user to subscribers\n                    this.userSubject.next(user);\n                }\n                return x;\n            }));\n    }\n\n    delete(id: string) {\n        return this.http.delete(`${environment.apiUrl}/users/${id}`)\n            .pipe(map(x => {\n                // auto logout if the logged in user deleted their own record\n                if (id == this.userValue.id) {\n                    this.logout();\n                }\n                return x;\n            }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Alert, AlertType } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    private defaultId = 'default-alert';\n\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n\n    // convenience methods\n    success(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n    }\n\n    error(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n    }\n\n    info(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n    }\n\n    warn(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n    }\n\n    // main alert method    \n    alert(alert: Alert) {\n        alert.id = alert.id || this.defaultId;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(id = this.defaultId) {\n        this.subject.next(new Alert({ id }));\n    }\n}","export * from './account.service';\nexport * from './alert.service';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { AuthGuard } from './_helpers';\n\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\nconst usersModule = () => import('./users/users.module').then(x => x.UsersModule);\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n    { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\n    { path: 'account', loadChildren: accountModule },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\nimport { AccountService } from './_services';\nimport { User } from './_models';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    user: User;\n\n    constructor(private accountService: AccountService) {\n        this.accountService.user.subscribe(x => this.user = x);\n    }\n\n    logout() {\n        this.accountService.logout();\n    }\n}","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n\n<!-- main app container -->\n<div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\">\n    <alert></alert>\n    <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// used to create fake backend\nimport { fakeBackendProvider } from './_helpers';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { AppComponent } from './app.component';\nimport { AlertComponent } from './_components';\nimport { HomeComponent } from './home';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule\n    ],\n    declarations: [\n        AppComponent,\n        AlertComponent,\n        HomeComponent\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n        // provider used to create fake backend\n        fakeBackendProvider\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { };","import { Component } from '@angular/core';\n\nimport { User } from '@app/_models';\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {\n    user: User;\n\n    constructor(private accountService: AccountService) {\n        this.user = this.accountService.userValue;\n    }\n}","<div class=\"p-4\">\n    <div class=\"container\">\n        <h1>Hi {{user.firstName}}!</h1>\n        <p>You're logged into the Bruins Augur GitHub Repo Submission Tool</p>\n        <p>repo submission form box placeholer for sprint 4</p>\n        <!--<p><a routerLink=\"/users\">Manage Users</a></p>-->\n    </div>\n</div>","export * from './home.component';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));"]}
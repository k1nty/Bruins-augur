{"version":3,"sources":["webpack:///src/app/users/add-edit.component.ts","webpack:///src/app/users/add-edit.component.html","webpack:///src/app/users/layout.component.ts","webpack:///src/app/users/layout.component.html","webpack:///src/app/users/list.component.ts","webpack:///src/app/users/list.component.html","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.module.ts"],"names":["AddEditComponent","formBuilder","route","router","accountService","alertService","loading","submitted","id","snapshot","params","isAddMode","passwordValidators","minLength","push","required","form","group","firstName","lastName","username","password","getById","pipe","subscribe","x","patchValue","clear","invalid","createUser","updateUser","register","value","next","success","keepAfterRouteChange","navigate","relativeTo","error","update","controls","onSubmit","templateUrl","LayoutComponent","ListComponent","users","getAll","user","find","isDeleting","filter","routes","path","component","children","UsersRoutingModule","forChild","imports","exports","UsersModule","declarations"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ templateUrl: 'add-edit.component.html' })\nexport class AddEditComponent implements OnInit {\n    form: FormGroup;\n    id: string;\n    isAddMode: boolean;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n        this.isAddMode = !this.id;\n        \n        // password not required in edit mode\n        const passwordValidators = [Validators.minLength(6)];\n        if (this.isAddMode) {\n            passwordValidators.push(Validators.required);\n        }\n\n        this.form = this.formBuilder.group({\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            username: ['', Validators.required],\n            password: ['', passwordValidators]\n        });\n\n        if (!this.isAddMode) {\n            this.accountService.getById(this.id)\n                .pipe(first())\n                .subscribe(x => this.form.patchValue(x));\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        if (this.isAddMode) {\n            this.createUser();\n        } else {\n            this.updateUser();\n        }\n    }\n\n    private createUser() {\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('User added successfully', { keepAfterRouteChange: true });\n                    this.router.navigate(['../'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n\n    private updateUser() {\n        this.accountService.update(this.id, this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['../../'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n}","<h1 *ngIf=\"isAddMode\">Add User</h1>\n<h1 *ngIf=\"!isAddMode\">Edit User</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"firstName\">First Name</label>\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"lastName\">Last Name</label>\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n            <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.username.errors.required\">Username is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"password\">\n                Password\n                <em *ngIf=\"!isAddMode\">(Leave blank to keep the same password)</em>\n            </label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Save\n        </button>\n        <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent { }","<div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'list.component.html' })\nexport class ListComponent implements OnInit {\n    users = null;\n\n    constructor(private accountService: AccountService) {}\n\n    ngOnInit() {\n        this.accountService.getAll()\n            .pipe(first())\n            .subscribe(users => this.users = users);\n    }\n\n    deleteUser(id: string) {\n        const user = this.users.find(x => x.id === id);\n        user.isDeleting = true;\n        this.accountService.delete(id)\n            .pipe(first())\n            .subscribe(() => this.users = this.users.filter(x => x.id !== id));\n    }\n}","<h1>Users</h1>\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add User</a>\n<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th style=\"width: 30%\">First Name</th>\n            <th style=\"width: 30%\">Last Name</th>\n            <th style=\"width: 30%\">Username</th>\n            <th style=\"width: 10%\"></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.firstName}}</td>\n            <td>{{user.lastName}}</td>\n            <td>{{user.username}}</td>\n            <td style=\"white-space: nowrap\">\n                <a routerLink=\"edit/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\n                <button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"user.isDeleting\">\n                    <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n                    <span *ngIf=\"!user.isDeleting\">Delete</span>\n                </button>\n            </td>\n        </tr>\n        <tr *ngIf=\"!users\">\n            <td colspan=\"4\" class=\"text-center\">\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: '', component: ListComponent },\n            { path: 'add', component: AddEditComponent },\n            { path: 'edit/:id', component: AddEditComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsersRoutingModule { }","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UsersRoutingModule\n    ],\n    declarations: [\n        LayoutComponent,\n        ListComponent,\n        AddEditComponent\n    ]\n})\nexport class UsersModule { }"]}